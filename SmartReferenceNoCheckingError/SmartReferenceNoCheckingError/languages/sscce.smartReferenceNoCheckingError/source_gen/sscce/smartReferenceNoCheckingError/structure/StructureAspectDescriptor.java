package sscce.smartReferenceNoCheckingError.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptContainer = createDescriptorForContainer();
  /*package*/ final ConceptDescriptor myConceptDef = createDescriptorForDef();
  /*package*/ final ConceptDescriptor myConceptRef = createDescriptorForRef();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptContainer, myConceptDef, myConceptRef);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Container:
        return myConceptContainer;
      case LanguageConceptSwitch.Def:
        return myConceptDef;
      case LanguageConceptSwitch.Ref:
        return myConceptRef;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("sscce.smartReferenceNoCheckingError", "Container", 0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be41L);
    b.class_(false, false, true);
    b.origin("r:56aaaa3a-26ee-44b5-b3d1-3bdc3ff84120(sscce.smartReferenceNoCheckingError.structure)/1735708887030611521");
    b.aggregate("defs", 0x18167a095cf2be7dL).target(0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be42L).optional(true).ordered(true).multiple(true).origin("1735708887030611581").done();
    b.aggregate("refs", 0x18167a095cf2be7fL).target(0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be7aL).optional(true).ordered(true).multiple(true).origin("1735708887030611583").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("sscce.smartReferenceNoCheckingError", "Def", 0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be42L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:56aaaa3a-26ee-44b5-b3d1-3bdc3ff84120(sscce.smartReferenceNoCheckingError.structure)/1735708887030611522");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("sscce.smartReferenceNoCheckingError", "Ref", 0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be7aL);
    b.class_(false, false, false);
    b.origin("r:56aaaa3a-26ee-44b5-b3d1-3bdc3ff84120(sscce.smartReferenceNoCheckingError.structure)/1735708887030611578");
    b.associate("def", 0x18167a095cf2be7bL).target(0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be42L).optional(false).origin("1735708887030611579").done();
    return b.create();
  }
}
