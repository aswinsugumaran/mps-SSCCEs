package sscce.smartReferenceNoCheckingError.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class check_Ref_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_Ref_NonTypesystemRule() {
  }
  public void applyRule(final SNode ref, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    System.out.println("NAME: " + SPropertyOperations.getString(SLinkOperations.getTarget(ref, MetaAdapterFactory.getReferenceLink(0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be7aL, 0x18167a095cf2be7bL, "def")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
    System.out.println("ResolveInfo: " + SNodeOperations.getReference(ref, MetaAdapterFactory.getReferenceLink(0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be7aL, 0x18167a095cf2be7bL, "def")).toString());
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0x1dc361589d7b4b9dL, 0x8929b0fa0d7a49b0L, 0x18167a095cf2be7aL, "sscce.smartReferenceNoCheckingError.structure.Ref");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}
