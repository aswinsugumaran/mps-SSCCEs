package TableNavDemo.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCell = createDescriptorForCell();
  /*package*/ final ConceptDescriptor myConceptRoot = createDescriptorForRoot();
  /*package*/ final ConceptDescriptor myConceptRow = createDescriptorForRow();
  /*package*/ final ConceptDescriptor myConceptRowHeader = createDescriptorForRowHeader();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCell, myConceptRoot, myConceptRow, myConceptRowHeader);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Cell:
        return myConceptCell;
      case LanguageConceptSwitch.Root:
        return myConceptRoot;
      case LanguageConceptSwitch.Row:
        return myConceptRow;
      case LanguageConceptSwitch.RowHeader:
        return myConceptRowHeader;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForCell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TableNavDemo", "Cell", 0x8bbc6835af784affL, 0xadb1795fe9a60846L, 0x7970127f6e0f9c51L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:848afa0c-2ae1-469e-bf8b-ca54ba802c4f(TableNavDemo.structure)/8750514414497537105");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TableNavDemo", "Root", 0x8bbc6835af784affL, 0xadb1795fe9a60846L, 0x7970127f6e0f88d0L);
    b.class_(false, false, true);
    b.origin("r:848afa0c-2ae1-469e-bf8b-ca54ba802c4f(TableNavDemo.structure)/8750514414497532112");
    b.aggregate("rows", 0x7970127f6e10043dL).target(0x8bbc6835af784affL, 0xadb1795fe9a60846L, 0x7970127f6e0f9ae0L).optional(true).ordered(true).multiple(true).origin("8750514414497563709").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRow() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TableNavDemo", "Row", 0x8bbc6835af784affL, 0xadb1795fe9a60846L, 0x7970127f6e0f9ae0L);
    b.class_(false, false, false);
    b.origin("r:848afa0c-2ae1-469e-bf8b-ca54ba802c4f(TableNavDemo.structure)/8750514414497536736");
    b.aggregate("rowHeader", 0x7970127f6e13ed6dL).target(0x8bbc6835af784affL, 0xadb1795fe9a60846L, 0x7970127f6e13ed72L).optional(false).ordered(true).multiple(false).origin("8750514414497820013").done();
    b.aggregate("cells", 0x7970127f6e1312dcL).target(0x8bbc6835af784affL, 0xadb1795fe9a60846L, 0x7970127f6e0f9c51L).optional(true).ordered(true).multiple(true).origin("8750514414497764060").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRowHeader() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TableNavDemo", "RowHeader", 0x8bbc6835af784affL, 0xadb1795fe9a60846L, 0x7970127f6e13ed72L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:848afa0c-2ae1-469e-bf8b-ca54ba802c4f(TableNavDemo.structure)/8750514414497820018");
    return b.create();
  }
}
